{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nexport const Actions = () => {\n  _s();\n\n  let [users, setUsers] = useState([]); //userLength is for showing the Data Loading message.\n\n  let [userLength, setUserLength] = useState(null);\n  useEffect(() => {\n    fetch(\"http://localhost/php-react/all-users.php\").then(res => {\n      return res.json();\n      console.log(resres.json());\n    }).then(data => {\n      if (data.success) {\n        setUsers(data.users.reverse());\n        setUserLength(true);\n      } else {\n        setUserLength(0);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }, []); // Inserting a new user into the database.\n\n  const insertUser = newUser => {\n    fetch(\"http://localhost/php-react/add-user.php\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(newUser)\n    }).then(res => {\n      return res.json();\n    }).then(data => {\n      if (data.id) {\n        setUsers([{\n          id: data.id,\n          ...newUser\n        }, ...users]);\n        setUserLength(true);\n      } else {\n        alert(data.msg);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }; // Enabling the edit mode for a listed user.\n\n\n  const editMode = id => {\n    users = users.map(user => {\n      if (user.id === id) {\n        user.isEditing = true;\n        return user;\n      }\n\n      user.isEditing = false;\n      return user;\n    });\n    setUsers(users);\n  }; // Cance the edit mode.\n\n\n  const cancelEdit = id => {\n    users = users.map(user => {\n      if (user.id === id) {\n        user.isEditing = false;\n        return user;\n      }\n\n      return user;\n    });\n    setUsers(users);\n  }; // Updating a user.\n\n\n  const updateUser = userData => {\n    fetch(\"http://localhost/php-react/update-user.php\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(userData)\n    }).then(res => {\n      return res.json();\n    }).then(data => {\n      if (data.success) {\n        users = users.map(user => {\n          if (user.id === userData.id) {\n            user.isEditing = false;\n            user.user_name = userData.user_name;\n            user.user_email = userData.user_email;\n            return user;\n          }\n\n          return user;\n        });\n        setUsers(users);\n      } else {\n        alert(data.msg);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }; // Deleting a user.\n\n\n  const deleteUser = theID => {\n    // filter outing the user.\n    let userDeleted = users.filter(user => {\n      return user.id !== theID;\n    });\n    fetch(\"http://localhost/php-react/delete-user.php\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        id: theID\n      })\n    }).then(res => {\n      return res.json();\n    }).then(data => {\n      if (data.success) {\n        setUsers(userDeleted);\n\n        if (users.length === 1) {\n          setUserLength(0);\n        }\n      } else {\n        alert(data.msg);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return {\n    users,\n    editMode,\n    cancelEdit,\n    updateUser,\n    insertUser,\n    deleteUser,\n    userLength\n  };\n};\n\n_s(Actions, \"x8aTuqdhxQ77ouxMo/rkYy8Qmnw=\");\n\n_c = Actions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Actions\");","map":{"version":3,"names":["useEffect","useState","Actions","users","setUsers","userLength","setUserLength","fetch","then","res","json","console","log","resres","data","success","reverse","catch","err","insertUser","newUser","method","headers","body","JSON","stringify","id","alert","msg","editMode","map","user","isEditing","cancelEdit","updateUser","userData","user_name","user_email","deleteUser","theID","userDeleted","filter","length"],"sources":["/var/www/html/react-php/src/Action.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nexport const Actions = () => {\n    let [users, setUsers] = useState([]);\n\n    //userLength is for showing the Data Loading message.\n    let [userLength, setUserLength] = useState(null);\n\n    useEffect(() => {\n        fetch(\"http://localhost/php-react/all-users.php\")\n        .then((res) => {\n            return res.json();\n            console.log(resres.json());\n        })\n        .then((data) => {\n            if (data.success) {\n                setUsers(data.users.reverse());\n                setUserLength(true);\n            } else {\n                setUserLength(0);\n            }\n        })\n        .catch((err) => {\n            console.log(err);\n        });\n    }, []);\n\n    // Inserting a new user into the database.\n    const insertUser = (newUser) => {\n        fetch(\"http://localhost/php-react/add-user.php\", {\n            method: \"POST\",\n            headers: {\"Content-Type\": \"application/json\"},\n            body: JSON.stringify(newUser),\n        })\n        .then((res) => {\n            return res.json();\n        })\n        .then((data) => {\n            if (data.id) {\n                setUsers([\n                    {\n                        id: data.id,\n                        ...newUser,\n                    },\n                    ...users,\n                ]);\n                setUserLength(true);\n            } else {\n                alert(data.msg);\n            }\n        })\n        .catch((err) => {\n            console.log(err);\n        });\n    };\n\n    // Enabling the edit mode for a listed user.\n    const editMode = (id) => {\n        users = users.map((user) => {\n            if (user.id === id) {\n                user.isEditing = true;\n                return user;\n            }\n            user.isEditing = false;\n            return user;\n        });\n        setUsers(users);\n    };\n\n    // Cance the edit mode.\n    const cancelEdit = (id) => {\n        users = users.map((user) => {\n            if (user.id === id) {\n                user.isEditing = false;\n                return user;\n            }\n            return user;\n        });\n        setUsers(users);\n    };\n\n    // Updating a user.\n    const updateUser = (userData) => {\n        fetch(\"http://localhost/php-react/update-user.php\", {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(userData),\n        })\n        .then((res) => {\n            return res.json();\n        })\n        .then((data) => {\n            if (data.success) {\n                users = users.map((user) => {\n                    if (user.id === userData.id) {\n                        user.isEditing = false;\n                        user.user_name = userData.user_name;\n                        user.user_email = userData.user_email;\n                        return user;\n                    }\n                    return user;\n                });\n                setUsers(users);\n            } else {\n                alert(data.msg);\n            }\n        })\n        .catch((err) => {\n            console.log(err);\n        });\n    };\n\n    // Deleting a user.\n    const deleteUser = (theID) => {\n        // filter outing the user.\n        let userDeleted = users.filter((user) => {\n            return user.id !== theID;\n        });\n        fetch(\"http://localhost/php-react/delete-user.php\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({ id: theID }),\n        })\n        .then((res) => {\n            return res.json();\n        })\n        .then((data) => {\n            if (data.success) {\n                setUsers(userDeleted);\n                if (users.length === 1) {\n                    setUserLength(0);\n                }\n            } else {\n                alert(data.msg);\n            }\n        })\n        .catch((err) => {\n            console.log(err);\n        });\n    };\n\n  return { users, editMode, cancelEdit, updateUser, insertUser, deleteUser, userLength, };\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}